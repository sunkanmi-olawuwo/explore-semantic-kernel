@model Chat.Models.ChatModel
@{
	ViewData["Title"] = "Semantic Kernel Chat";
}

<link rel="stylesheet" href="~/css/chat.css" asp-append-version="true" />


<div class="text-center">
	<h1 class="display-5 fw-light">@ViewData["Title"]</h1>
</div>

<form id="chatForm" method="post">

	<div id="chatHistory" style="height: 65vh" class="history container border shadow rounded m-2 p-2">
		@await Html.PartialAsync("ChatHistoryPartialView", Model)
	</div>

	<div style="height: 15vh" class="container-fluid ">
		<div class="row">
			<label class="mt-3 form-label" asp-for="Prompt"></label>
		</div>
		<div class="row">
			<div class="col-11">
				<textarea id="promptInput" class="form-control" placeholder="Press ctrl+enter to submit prompt" asp-for="@Model.Prompt" rows="3"></textarea>
			</div>
			<div class="col-1">
				<input type="button" value="Submit" class="btn btn-primary" onclick="submitChatForm()" />
			</div>
		</div>
	</div>
	<div>
	</div>
</form>


@section Scripts {
	<script>
		function submitChatForm() {
			//Make sure there is some text before submitting
			let promptInput = $('#promptInput').val().trim();
			if (promptInput === "") {
				$('#promptInput').focus();
				return;
			}

			document.getElementById('chatHistory').innerHTML += `
				<div class="d-flex flex-row-reverse  m-1 User">
				<img class="mb-1" src="images/user_icon.png" />
				</div>
				<div class="d-flex flex-row-reverse m-1 text-primary fw-bold User">
				<pre style="max-width: 75%;">
				`+promptInput+`</pre></div>`

			formData = $('#chatForm').serialize();
			$('#promptInput').val('');
			var interval = addThenRotateImage();
			scrollToBottom();

			$.post({
				url: '@Url.Action("Chat", "Home")',
				data: formData,
				success: function(response) {
					$('#chatHistory').html(response);
					setTimeout(scrollToBottom,100);
					$('#promptInput').focus(); // Clear the prompt and give it focus

				},
				error: function(xhr, status, error) {
					clearInterval(imageRotation);
					let img = document.getElementById(imageId);
					if (img) {
						img.parentNode.removeChild(img);
					}
					$('#promptInput').focus();
				}
			}).always(function() {
				// Code to run after the post finishes, regardless of success or failure
				clearInterval(interval);
			});
		}

		function scrollToBottom() {
			let chat_box = document.getElementById('chatHistory');
			chat_box.scrollTop = chat_box.scrollHeight;
		}

		function addThenRotateImage() {
			let messageContainer = document.getElementById('chatHistory');
			imageId = Math.random().toString(36).substring(2, 10);  //generate a random image id
			messageContainer.innerHTML += `<div class="p-2"><img id="${imageId}" src="images/ai_icon.png"/></div>`;
			var interval = setInterval(function () {
					rotateImage(imageId);
				}, 100);
			return interval;
		}


		function rotateImage(imageId) {
			var img = document.getElementById(imageId);
			// Get the current rotation value of the image, if it exists, or set it to 0
			if(img) {
				let rotation = parseInt(img.style.transform.replace(/[^0-9]/g, '')) || 0;
				// Calculate the new rotation value by adding 10 degrees and taking the modulo 360
				rotation = (rotation + 10) % 360;
				// Apply the new rotation value to the image
				img.style.transform = 'rotate(' + rotation + 'deg)';
			}
		}

		$(document).ready(function() {
			$('#promptInput').focus(); // Set focus to the textarea when the page loads
			$('#promptInput').keydown(function(event) {
				if (event.ctrlKey && event.key === 'Enter') {
					submitChatForm();
				}
			});
		});
	</script>
}

